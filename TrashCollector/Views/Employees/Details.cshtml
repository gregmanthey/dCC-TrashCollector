@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Customer Details</h2>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZIP)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZIP)
        </dd>

    </dl>
</div>

<div id="googleMap" style="width:100%;height:400px;"></div>

<p>
    @Html.ActionLink("Back to List", "Index")
</p>

<script>
    function myMap() {
        var address = "@Model.StreetAddress" + ",+" + "@Model.City" + ",+" + "@Model.State";
        address.replace(" ", "+");
        codeAddress(address);
    }
    function codeAddress(address)
    {
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode( {address:address}, function(results, status)
        {
            if (status == google.maps.GeocoderStatus.OK)
            {
                var mapProp= {
                                center:new google.maps.LatLng(results[0].geometry.location.lat,results[0].geometry.location.long),
                                zoom:15
                             };
                var map = new google.maps.Map(document.getElementById("googleMap"),mapProp);
                map.setCenter(results[0].geometry.location);

                var marker = new google.maps.Marker(
                {
                    map: map,
                    position: results[0].geometry.location
                });
            }
            else
            {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=@Keys.googleMapsApiKey&callback=myMap"></script>